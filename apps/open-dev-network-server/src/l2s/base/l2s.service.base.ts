/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, L2s as PrismaL2s } from "@prisma/client";

export class L2sServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.L2sCountArgs, "select">): Promise<number> {
    return this.prisma.l2s.count(args);
  }

  async l2sItems(args: Prisma.L2sFindManyArgs): Promise<PrismaL2s[]> {
    return this.prisma.l2s.findMany(args);
  }
  async l2s(args: Prisma.L2sFindUniqueArgs): Promise<PrismaL2s | null> {
    return this.prisma.l2s.findUnique(args);
  }
  async createL2s(args: Prisma.L2sCreateArgs): Promise<PrismaL2s> {
    return this.prisma.l2s.create(args);
  }
  async updateL2s(args: Prisma.L2sUpdateArgs): Promise<PrismaL2s> {
    return this.prisma.l2s.update(args);
  }
  async deleteL2s(args: Prisma.L2sDeleteArgs): Promise<PrismaL2s> {
    return this.prisma.l2s.delete(args);
  }
}
