/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Technical as PrismaTechnical } from "@prisma/client";

export class TechnicalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TechnicalCountArgs, "select">
  ): Promise<number> {
    return this.prisma.technical.count(args);
  }

  async technicals(
    args: Prisma.TechnicalFindManyArgs
  ): Promise<PrismaTechnical[]> {
    return this.prisma.technical.findMany(args);
  }
  async technical(
    args: Prisma.TechnicalFindUniqueArgs
  ): Promise<PrismaTechnical | null> {
    return this.prisma.technical.findUnique(args);
  }
  async createTechnical(
    args: Prisma.TechnicalCreateArgs
  ): Promise<PrismaTechnical> {
    return this.prisma.technical.create(args);
  }
  async updateTechnical(
    args: Prisma.TechnicalUpdateArgs
  ): Promise<PrismaTechnical> {
    return this.prisma.technical.update(args);
  }
  async deleteTechnical(
    args: Prisma.TechnicalDeleteArgs
  ): Promise<PrismaTechnical> {
    return this.prisma.technical.delete(args);
  }
}
