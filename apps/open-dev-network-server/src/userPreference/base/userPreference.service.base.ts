/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserPreference as PrismaUserPreference } from "@prisma/client";

export class UserPreferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserPreferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userPreference.count(args);
  }

  async userPreferences(
    args: Prisma.UserPreferenceFindManyArgs
  ): Promise<PrismaUserPreference[]> {
    return this.prisma.userPreference.findMany(args);
  }
  async userPreference(
    args: Prisma.UserPreferenceFindUniqueArgs
  ): Promise<PrismaUserPreference | null> {
    return this.prisma.userPreference.findUnique(args);
  }
  async createUserPreference(
    args: Prisma.UserPreferenceCreateArgs
  ): Promise<PrismaUserPreference> {
    return this.prisma.userPreference.create(args);
  }
  async updateUserPreference(
    args: Prisma.UserPreferenceUpdateArgs
  ): Promise<PrismaUserPreference> {
    return this.prisma.userPreference.update(args);
  }
  async deleteUserPreference(
    args: Prisma.UserPreferenceDeleteArgs
  ): Promise<PrismaUserPreference> {
    return this.prisma.userPreference.delete(args);
  }
}
