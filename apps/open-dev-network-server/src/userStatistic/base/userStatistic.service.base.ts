/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserStatistic as PrismaUserStatistic } from "@prisma/client";

export class UserStatisticServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserStatisticCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userStatistic.count(args);
  }

  async userStatistics(
    args: Prisma.UserStatisticFindManyArgs
  ): Promise<PrismaUserStatistic[]> {
    return this.prisma.userStatistic.findMany(args);
  }
  async userStatistic(
    args: Prisma.UserStatisticFindUniqueArgs
  ): Promise<PrismaUserStatistic | null> {
    return this.prisma.userStatistic.findUnique(args);
  }
  async createUserStatistic(
    args: Prisma.UserStatisticCreateArgs
  ): Promise<PrismaUserStatistic> {
    return this.prisma.userStatistic.create(args);
  }
  async updateUserStatistic(
    args: Prisma.UserStatisticUpdateArgs
  ): Promise<PrismaUserStatistic> {
    return this.prisma.userStatistic.update(args);
  }
  async deleteUserStatistic(
    args: Prisma.UserStatisticDeleteArgs
  ): Promise<PrismaUserStatistic> {
    return this.prisma.userStatistic.delete(args);
  }
}
